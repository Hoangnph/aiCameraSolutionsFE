{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Project/Project/AI_OCR/feMain/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/authAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n  accessToken: localStorage.getItem('accessToken'),\n  refreshToken: localStorage.getItem('refreshToken')\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        accessToken: action.payload.accessToken,\n        refreshToken: action.payload.refreshToken\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        isAuthenticated: false,\n        user: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n        accessToken: null,\n        refreshToken: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (state.accessToken) {\n        try {\n          dispatch({\n            type: 'SET_LOADING',\n            payload: true\n          });\n          const userData = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: userData,\n              accessToken: state.accessToken,\n              refreshToken: state.refreshToken\n            }\n          });\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          // Clear invalid tokens\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.login(credentials);\n\n      // Store tokens\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message || 'Login failed'\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.register(userData);\n\n      // Store tokens\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message || 'Registration failed'\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      if (state.accessToken) {\n        await authAPI.logout();\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear tokens regardless of API call success\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","initialState","user","isAuthenticated","isLoading","error","accessToken","localStorage","getItem","refreshToken","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","checkAuth","userData","getCurrentUser","console","removeItem","login","credentials","response","setItem","success","message","register","logout","updateUser","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/macintoshhd/Project/Project/AI_OCR/feMain/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/authAPI';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n  accessToken: localStorage.getItem('accessToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        accessToken: action.payload.accessToken,\n        refreshToken: action.payload.refreshToken,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        isAuthenticated: false,\n        user: null,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n        accessToken: null,\n        refreshToken: null,\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (state.accessToken) {\n        try {\n          dispatch({ type: 'SET_LOADING', payload: true });\n          const userData = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: userData,\n              accessToken: state.accessToken,\n              refreshToken: state.refreshToken,\n            },\n          });\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          // Clear invalid tokens\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: 'LOGIN_START' });\n      const response = await authAPI.login(credentials);\n      \n      // Store tokens\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response,\n      });\n      \n      return { success: true };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message || 'Login failed',\n      });\n      return { success: false, error: error.message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      dispatch({ type: 'LOGIN_START' });\n      const response = await authAPI.register(userData);\n      \n      // Store tokens\n      localStorage.setItem('accessToken', response.accessToken);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response,\n      });\n      \n      return { success: true };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message || 'Registration failed',\n      });\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      if (state.accessToken) {\n        await authAPI.logout();\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear tokens regardless of API call success\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const updateUser = (userData) => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'SET_ERROR', payload: null });\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    clearError,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}